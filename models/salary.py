# models/salary.py

from models.base_model import BaseModel

class Salary(BaseModel):
    """
    üí∞ Salary oszt√°ly, amely a fizet√©seket kezeli az adatb√°zisban.
    üîπ Az oszt√°ly a BaseModel-t √∂r√∂kli, √≠gy megkapja az alapvet≈ë adatb√°zis m≈±veleteket.
    """

    # üèõÔ∏è Az adatb√°zisban tal√°lhat√≥ t√°bla neve
    TABLE_NAME = "hr.salaries"

    # üÜî Az els≈ëdleges kulcs oszlop√°nak neve
    ID_COLUMN = "salary_id"

    # üíµ Az oszlop neve, amely a fizet√©s √∂sszeg√©t t√°rolja
    LOOKUP_COLUMN = "monthly_salary"

    # üìú SQL lek√©rdez√©s a t√°bla l√©trehoz√°s√°ra, ha m√©g nem l√©tezik
    CREATE_TABLE_QUERY = f"""
        CREATE TABLE IF NOT EXISTS {TABLE_NAME} (
            {ID_COLUMN} SERIAL PRIMARY KEY,  -- Automatikusan n√∂vekv≈ë egyedi azonos√≠t√≥
            {LOOKUP_COLUMN} INTEGER NOT NULL,  -- Fizet√©s √∂sszege, nem lehet NULL
            UNIQUE({LOOKUP_COLUMN})  -- Egyedi √©rt√©kek biztos√≠t√°sa a fizet√©s oszlopban
        );
    """

    # üì• SQL lek√©rdez√©s egy √∫j fizet√©s besz√∫r√°s√°ra
    INSERT_QUERY = f"""
        INSERT INTO {TABLE_NAME} ({LOOKUP_COLUMN})
        VALUES (%s)
        ON CONFLICT ({LOOKUP_COLUMN}) DO NOTHING  -- Ha m√°r l√©tezik, nem sz√∫rja be √∫jra
        RETURNING {ID_COLUMN};  -- Visszat√©r az √∫jonnan besz√∫rt rekord ID-j√°val
    """
